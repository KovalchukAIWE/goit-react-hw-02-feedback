{"version":3,"sources":["components/Button/Button.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/App.js","index.js","components/Button/Button.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css"],"names":["Button","nameBtn","onLeaveFeedback","className","styles","button","onClick","type","FeedbackOptions","options","map","Statistics","good","neutral","bad","total","positivePercentage","statisticsTitle","Section","title","children","mainTitle","defaultProps","App","state","handleClickButton","setState","Object","values","this","reduce","acc","stat","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wQAsBeA,EAjBA,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACzB,OACE,wBACEC,UAAWC,IAAOC,OAClBC,QAAS,kBAAMJ,EAAgBD,IAC/BM,KAAK,SAHP,SAKGN,KCEQO,EAVS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASP,EAAZ,EAAYA,gBAAZ,OACtBO,EAAQC,KAAI,SAAAT,GAAO,OACjB,cAAC,EAAD,CAAsBA,QAASA,EAASC,gBAAiBA,GAA5CD,O,gBCyBFU,EA3BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAIb,UAAWC,IAAOa,gBAAtB,wBACCF,EACC,qCACE,uCAAUH,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,qDAAwBC,EAAxB,UAGF,sD,gBCbFE,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIjB,UAAWC,IAAOiB,UAAtB,SAAkCF,IACjCC,MASPF,EAAQI,aAAe,CACrBH,MAAO,yBAGMD,QChBMK,E,4MACnBC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAcPW,kBAAoB,SAAAxB,GAClB,EAAKyB,SAAL,eAAiBzB,EAAU,EAAKuB,MAAMvB,GAAW,K,mEAXjD,OAAO0B,OAAOC,OAAOC,KAAKL,OAAOM,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,K,wDAIH,OAAOC,KAAKC,MAAOL,KAAKL,MAAMZ,KAAOiB,KAAKM,qBAAwB,O,+BAO1D,IAAD,EACwBN,KAAKL,MAA5BZ,EADD,EACCA,KAAME,EADP,EACOA,IAAKD,EADZ,EACYA,QACnB,OACE,eAAC,EAAD,CAASM,MAAM,wBAAf,UACE,cAAC,EAAD,CACEV,QAASkB,OAAOS,KAAKP,KAAKL,OAC1BtB,gBAAiB2B,KAAKJ,oBAExB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKM,qBACZnB,mBAAoBa,KAAKQ,2C,GAnCFC,aCAjCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,yB,kBCA3BD,EAAOC,QAAU,CAAC,gBAAkB,sC,kBCApCD,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.46248828.chunk.js","sourcesContent":["  \r\nimport React from 'react';\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ nameBtn, onLeaveFeedback }) => {\r\n  return (\r\n    <button\r\n      className={styles.button}\r\n      onClick={() => onLeaveFeedback(nameBtn)}\r\n      type=\"button\"\r\n    >\r\n      {nameBtn}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  nameBtn: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport Button from '../Button/Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\r\n  options.map(nameBtn => (\r\n    <Button key={nameBtn} nameBtn={nameBtn} onLeaveFeedback={onLeaveFeedback} />\r\n  ));\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h2 className={styles.statisticsTitle}>Statistics</h2>\r\n      {total ? (\r\n        <>\r\n          <p>Good: {good}</p>\r\n          <p>Neutral: {neutral}</p>\r\n          <p>Bad: {bad}</p>\r\n          <p>Total: {total}</p>\r\n          <p>Positive feedbacks: {positivePercentage}%</p>\r\n        </>\r\n      ) : (\r\n        <p>No feedback given</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1 className={styles.mainTitle}>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nSection.defaultProps = {\r\n  title: 'Awesome Section Title',\r\n};\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\nimport Statistics from './Statistics/Statistics';\r\nimport Section from './Section/Section';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback() {\r\n    return Object.values(this.state).reduce((acc, stat) => {\r\n      acc += stat;\r\n      return acc;\r\n    }, 0);\r\n  }\r\n\r\n  countPositiveFeedbackPercentage() {\r\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n  }\r\n\r\n  handleClickButton = nameBtn => {\r\n    this.setState({ [nameBtn]: this.state[nameBtn] + 1 });\r\n  };\r\n\r\n  render() {\r\n    const { good, bad, neutral } = this.state;\r\n    return (\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions\r\n          options={Object.keys(this.state)}\r\n          onLeaveFeedback={this.handleClickButton}\r\n        />\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          total={this.countTotalFeedback()}\r\n          positivePercentage={this.countPositiveFeedbackPercentage()}\r\n        />\r\n      </Section>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1RuUr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsTitle\":\"Statistics_statisticsTitle__2SxYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTitle\":\"Section_mainTitle__3AumY\"};"],"sourceRoot":""}